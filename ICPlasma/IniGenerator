#!/usr/bin/env python3

from tkinter import *
from tkinter import ttk
from tkinter import messagebox

import textwrap

root = Tk()
root.title('Ini generator')
root.geometry('300x450') # Width, Height
root.resizable(True, True)

notebook = ttk.Notebook(root, width=292, height=380)
notebook.grid(row=0, column=0, pady=3, padx=3)

mainframe1 = Frame(notebook, padx=5, pady=0)
mainframe1.grid(row=0, column=0, pady=0, padx=0)

#First frame: presets
frame = LabelFrame(mainframe1, text="Presets", padx=5, pady=0)
frame.grid(row=0, column=0, pady=0, padx=0)

#Variables for the Presets
AllVar = IntVar()
AllEmisVar = IntVar()

AllLdecayvar = IntVar()
AllLvar = IntVar()
AllLScatvar = IntVar()

AllSdecayvar = IntVar()
AllSvar = IntVar()
AllSScatvar = IntVar()

AllTvar = IntVar()
AllTdecayvar = IntVar()

#Variavel p limpar tudo
clear = IntVar()

#Preset variables list
presetvlist = [AllVar, AllEmisVar, AllLdecayvar, AllLvar, AllLScatvar, AllSdecayvar, AllSvar, AllSScatvar, AllTvar, AllTdecayvar, clear]

#Variables L
lemis = IntVar()
ldecayls = IntVar()
ldecaylt = IntVar()
ldecayst = IntVar()
ldecaytt = IntVar()
lscatll = IntVar()
lscatlt = IntVar()

#Variaveis S
semis = IntVar()
sdecayll = IntVar()
sdecaylt = IntVar()
sscat = IntVar()

# Variaveis T
tdecayll = IntVar()
tdecayls = IntVar()
tdecaytl = IntVar()
tscatlt = IntVar()

#Individual variable list and namelist (it'd be better as a dictionary. But i wont bother right now)
vlist = [lemis, ldecayls, ldecaylt, ldecayst, ldecaytt, lscatll, lscatlt, semis, sdecayll, sdecaylt, sscat, tdecayll, tdecayls, tdecaytl, tscatlt]
namelist = ['Lemis', 'LdecayLS', 'LdecayLT', 'LdecayST', 'LdecayTT', 'LscatLL', 'LscatLT', 'Semis', 'SdecayLL', 'SdecayLT', 'Sscat', 'TdecayLL', 'TdecayLS', 'TdecayTL', 'TscatLT']

## Setting individual variables from Presets
def changevalue(value, var):
	'''Given your selection of a preset variable, changes all the individual variables
	associated with the given Preset. Ex.: If you check "AllSdecay", it turns "SdecayLL" and "SdecayLT" on.
	'''
	if var.get()==1 and value=='All':
		for v in vlist:
			v.set(1)
	elif var.get()==1 and value=='AllEmis':
		lemis.set(1); semis.set(1)
	elif var.get()==1 and value=='AllL':
		for v in vlist[0:7]:
			v.set(1)
	elif var.get()==1 and value=='AllS':
		for v in vlist[7:11]:
			v.set(1)
	elif var.get()==1 and value=='AllLdecay':
		for v in vlist[1:5]:
			v.set(1)
	elif var.get()==1 and value=='AllSdecay':
		for v in vlist[8:10]:
			v.set(1)
	elif var.get()==1 and value=='AllSScat':
		sscat.set(1)
	elif var.get()==1 and value=='AllLScat':
		lscatll.set(1); lscatlt.set(1)
	elif var.get()==1 and value=='AllT':
		for v in vlist[11:]:
			v.set(1)
	elif var.get()==1 and value=='AllTdecay':
		for v in vlist[11:14]:
			v.set(1)

# Function to clear all variables in the program.
def clearall():
	for v in presetvlist:
		v.set(0)
	for v in vlist:
		v.set(0)

# Bulk checkbuttons
AllButton = Checkbutton(frame, text='All',width=0, variable=AllVar, onvalue='1', offvalue='0', command=lambda x='All', y=AllVar: changevalue(x, y))
AllButton.grid(row=1, column=0, sticky=W)

AllEmisbutton = Checkbutton(frame, text='All Emission', variable=AllEmisVar, onvalue='1', offvalue='0', command=lambda x='AllEmis', y=AllEmisVar: changevalue(x, y))
AllEmisbutton.grid(row=1, column=1, pady=1, padx=1, sticky=W)

AllL = Checkbutton(frame, text='All L', variable=AllLvar, onvalue='1', offvalue='0', command= lambda x='AllL', y=AllLvar: changevalue(x, y))
AllL.grid(row=2, column=0, pady=1, padx=1, sticky=W)

AllS = Checkbutton(frame, text='All S', variable=AllSvar, onvalue='1', offvalue='0', command=lambda x='AllS', y=AllSvar: changevalue(x, y))
AllS.grid(row=2, column=1, pady=1, padx=1, sticky=W)

AllLdecay = Checkbutton(frame, text='All L Decay',variable=AllLdecayvar, onvalue='1', offvalue='0', command=lambda x='AllLdecay', y=AllLdecayvar: changevalue(x, y))
AllLdecay.grid(row=3, column=0, pady=1, padx=1)

AllSdecay = Checkbutton(frame, text='All S Decay',variable=AllSdecayvar, onvalue='1', offvalue='0', command=lambda x='AllSdecay', y=AllSdecayvar: changevalue(x, y))
AllSdecay.grid(row=3, column=1, pady=1, padx=1)

AllLScat = Checkbutton(frame, text='All L Scatter',variable=AllLScatvar, onvalue='1', offvalue='0', command=lambda x='AllLScat', y=AllLScatvar: changevalue(x, y))
AllLScat.grid(row=4, column=0, pady=1, padx=1)

AllSScat = Checkbutton(frame, text='All S Scatter',variable=AllSScatvar, onvalue='1', offvalue='0', command=lambda x='AllSScat', y=AllSScatvar: changevalue(x, y))
AllSScat.grid(row=4, column=1, pady=1, padx=1)

AllT = Checkbutton(frame, text='All T ',variable=AllTvar, onvalue='1', offvalue='0', command=lambda x='AllT', y=AllTvar: changevalue(x, y))
AllT.grid(row=5, column=0, pady=1, padx=1, sticky=W)

AllTdecay = Checkbutton(frame, text='All T decay',variable=AllTdecayvar, onvalue='1', offvalue='0', command=lambda x='AllTdecay', y=AllTdecayvar: changevalue(x, y))
AllTdecay.grid(row=5, column=1, pady=1, padx=1)


# Frame for the custom settings
custom = LabelFrame(mainframe1, text="Custom")
custom.grid(row=1, column=0, padx=5, pady=0, sticky=W)


# Individual buttons for custom L settings
Lemis = Checkbutton(custom, text='L emission', variable=lemis, onvalue='1', offvalue='0')
Lemis.grid(row=0, column=0, pady=1, padx=1)
LdecayLS = Checkbutton(custom, text='L decay LS', variable=ldecayls, onvalue='1', offvalue='0')
LdecayLS.grid(row=1, column=0, pady=1, padx=1)
LdecayLT = Checkbutton(custom, text='L decay LT', variable=ldecaylt, onvalue='1', offvalue='0')
LdecayLT.grid(row=2, column=0, pady=1, padx=1)
LdecayST = Checkbutton(custom, text='L decay ST', variable=ldecayst, onvalue='1', offvalue='0')
LdecayST.grid(row=3, column=0, pady=1, padx=1)
LdecayTT = Checkbutton(custom, text='L decay TT', variable=ldecaytt, onvalue='1', offvalue='0')
LdecayTT.grid(row=4, column=0, pady=1, padx=1)
LscatLL = Checkbutton(custom, text='L scatter LL', variable=lscatll, onvalue='1', offvalue='0')
LscatLL.grid(row=5, column=0, pady=1, padx=1)
LscatLT = Checkbutton(custom, text='L scatter LT', variable=lscatlt, onvalue='1', offvalue='0')
LscatLT.grid(row=6, column=0, pady=1, padx=1)


# Individual buttons for custom S settings
Semis = Checkbutton(custom, text='S emission', variable=semis, onvalue='1', offvalue='0')
Semis.grid(row=0, column=1, pady=1, padx=1)
SdecayLL = Checkbutton(custom, text='S decay LL', variable=sdecayll, onvalue='1', offvalue='0')
SdecayLL.grid(row=1, column=1, pady=1, padx=1)
SdecayLT = Checkbutton(custom, text='S decay LT', variable=sdecaylt, onvalue='1', offvalue='0')
SdecayLT.grid(row=2, column=1, pady=1, padx=1)
Sscatter = Checkbutton(custom, text='S scatter', variable=sscat, onvalue='1', offvalue='0')
Sscatter.grid(row=3, column=1, pady=1, padx=1)


# Individual buttons for custom T settings
TdecayLL = Checkbutton(custom, text='T decay LL', variable=tdecayll, onvalue='1', offvalue='0')
TdecayLL.grid(row=4, column=1, pady=1, padx=1)
TdecayLS = Checkbutton(custom, text='T decay LS', variable=tdecayls, onvalue='1', offvalue='0')
TdecayLS.grid(row=5, column=1, pady=1, padx=1)
TdecayTL = Checkbutton(custom, text='T decay TL', variable=tdecaytl, onvalue='1', offvalue='0')
TdecayTL.grid(row=6, column=1, pady=1, padx=1)
TscatLT = Checkbutton(custom, text='T scatter LT', variable=tscatlt, onvalue='1', offvalue='0')
TscatLT.grid(row=7, column=1, pady=1, padx=1)

# Button to clear everything
clearbutton = Button(custom, text='Clear All', fg='black', command=clearall)
clearbutton.grid(row=7, column=0, pady=1, padx=1)


# Creation of Ini file

text1 = '''0	       IFlag
51,101          nux,nuz (must be odd)
51,51          nqx,nqz (must be odd)
71,71          nqx2,nqz2 (must be odd)
101            nqmod
1              nrz (must be odd)
12.E0          Ulim
0.1E0          Ucrit
1.E-4          Qxi
0.6E0          Qxf
1.E-4          Qzi
0.6E0          Qzf
1.E-4          Qi
1.E+0          Qf
"Auto  "       InitialLevel ("Choose" or "Auto  " or "Null  ")
2.0E-4         Iw0   (For the case InitialLevel="Choose")
0              AsympT (Asymptotic state for T waves, 1: Yes, 0: No)
0.0E-2         RatioNke
0.0E-1         RatioNki
5.,1          Kappae,Alphae
5.,1          Kappai,Alphai
2.0E-4         RatioNf
6.E0           Uf
0.D0    Thf (pitch angle forward beam, radians)
1.0E0          RTfparTs
3.0E0          RTfperpTs
0.0E-4         RatioNb
-5.E0          Ub
0.E0           Thb (pitch angle backward beam, radians)
2.0E0          RTbparTs
4.0E0          RTbperpTs
2.0E0          RTeTi
5.0E-3         G (Plasma parameter)
4.0E-3         Ve2C2'''

text2 = '''"No "          CollTerm ("Yes" or "No ")
"Complete"     CollTermForm ("Complete" or "Expanded")
"Yes"          SpontEmis ("Yes" or "No ")
"Yes"          ScatElSpo ("Yes" or "No ")
"No "          NewEffects1 ("Yes" or "No ", for the initial spectra)
"No "          NewEffects2 ("Yes" or "No ", for the time evolution equations)
"No "          Gcoll ("Yes" or "No ")
"No "          Bremss ("Yes" or "No ")
"Yes"          RenormFe ("Yes" or "No ")
"No "          DerivLn ("Yes" or "No ")
"No "          RebuildL ("Yes" or "No ")
"Yes"          RebuildS ("Yes" or "No ")
"No "          RebuildFe ("Yes" or "No ")
"Yes"          Lsaturation ("Yes" or "No ")
\n'''

# Function to generate the Ini.wt file
def generate():
	text = '\n'
	for i in range(len(vlist)):
		if vlist[i].get()==1:
			yesorno='"Yes"'
		else:
			yesorno='"No "'
		subtext=yesorno + 10*" " + namelist[i] + ' ' + '("Yes" or "No ")\n'
		text = text + subtext
	result = writeIni(text)
	if result=='Done':
		messagebox.showinfo('Done', 'Pronto.\nAperte \'Ok\' para sair.')
	root.quit()

def writeIni(text):
	file = open('Ini.wt', 'w')
	file.write(text1 + text + text2)
	return 'Done'


generatebutton = Button(root, text='Generate', fg='black', command=generate)
generatebutton.grid(row=8, column=0, padx=1, pady=1) 

# Start of mainframe2

mainframe2 = Frame(notebook, padx=5, pady=0)
mainframe2.grid(row=0, column=0, pady=0, padx=0)

frame2 = LabelFrame(mainframe2, text="Variables", padx=5, pady=0)
frame2.grid(row=0, column=0, pady=0, padx=0)
tbd2 = Label(frame2, text='To be Done', padx=0, pady=0)
tbd2.grid(row=0, column=0, pady=0, padx=0)

# Start of mainframe3
mainframe3 = Frame(notebook, padx=5, pady=0)
mainframe3.grid(row=0, column=0, pady=0, padx=0)

frame3 = LabelFrame(mainframe3, text='Additional', padx=5, pady=0)
frame3.grid(row=0, column=0, pady=0, padx=0)
texttbd3 = 'To be Done'# -> ' + str(AllVar.get())
tbd3 = Label(frame3, text=texttbd3, padx=0, pady=0)
tbd3.grid(row=0, column=0, pady=0, padx=0)

# Start of mainframe4
mainframe4 = Frame(notebook, width=300, height=400, padx=5, pady=0)
mainframe4.grid(row=0, column=0, pady=0, padx=0)

frame4 = Frame(mainframe4, width=550, height=300, padx=0, pady=0)
frame4.grid(row=0, column=0, pady=0, padx=0)
abouttext = """This GUI interface was created with the intention of being a tool to help
with the creation of the 'Ini.wt' file, and doesn't modify the
source code of 'wt_lst.f90'."""
abouttext=textwrap.wrap(abouttext, width=40)
aboutlabel = Label(frame4, text='\n'.join(abouttext), padx=0, pady=0, justify=LEFT)
aboutlabel.grid(row=0, column=0, sticky=W)
#aboutlabel.grid(row=0, column=0, padx=5, pady=5)
#aboutlabel.place(x=500, y=90, anchor="e", justify=LEFT)

notebook.add(mainframe1, text='Waves')
notebook.add(mainframe2, text='Variables')
notebook.add(mainframe3, text='Additional')
notebook.add(mainframe4, text='About')

''' # Add these lines if you want a dynamic window.
def updatestatus():
	"""This function is used to update the status of a variable
	from different tabs. Use it as you wish. Right now, it is useless."""
	current = tbd3["text"]
	tbd3["text"] = 'To be Done -> ' + str(AllVar.get())
	root.after(500, updatestatus)
root.after(1, updatestatus)
'''


root.mainloop()